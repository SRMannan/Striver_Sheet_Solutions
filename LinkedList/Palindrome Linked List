/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        stack<int> s;
        auto temp = head;

        while(temp)
        {
            int digi = temp->val;
            s.push(digi) , temp = temp->next;
        }

        temp = head;
        bool ans = true;
        while(!s.empty())
        {
                int frontal = s.top();
                s.pop();
                if(frontal == temp -> val)              temp = temp->next;
                else
                {
                    ans = false;
                    break;
                }
        }

        return ans;

    }
};